import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;


/**
 * <h1>Truck</h1> Represents a Truck
 */

public class Truck extends Vehicle {

    private String licensePlate;
    private double maxWeight;
    private double currentWeight;
    private int zipDest;
    private ArrayList<Package> packages = new ArrayList<Package>();
    private final double GAS_RATE = 1.66;

    /**
     * Default Constructor
     */

    public Truck() {
        super();
    }

    /**
     * Constructor
     *
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */

    public Truck(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }


    public String getLicensePlate() {
        return this.licensePlate;
    }

    public void setLicensePlate(String licensePlate) {
        this.licensePlate = licensePlate;
    }

    public double getMaxWeight() {
        return this.maxWeight;
    }

    public void setMaxWeight(double maxWeight) {
        this.maxWeight = maxWeight;
    }

    public double getCurrentWeight() {
        return this.currentWeight;
    }

    public int getZipDest() {
        return this.zipDest;
    }

    public void setZipDest(int zipDest) {
        this.zipDest = zipDest;
    }

    public ArrayList <Package> getPackages() {
        return this.packages;
    }

    /**
     * Returns the profits generated by the packages currently in the Vehicle.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.66)
     * </p>
     */

    NumberFormat nf = NumberFormat.getCurrencyInstance(Locale.US);

//    @Override
//    public double getProfit() { //check this
//        double profit = 0.0;
//        double priceOfPackage = 0.0;
//
//
//        for (int i = 0; i < packages.size(); i++) {
//            priceOfPackage = packages.get(i).getPrice();
//            profit += priceOfPackage;
//        }
//
//        profit -= (getMaxRange() * GAS_RATE);
//
//        return profit;
//    }

    @Override
    public double getProfit() {
        double profit = 0.0;
        double priceOfPackage = 0.0;
        int maxRange = 0;
        int range = 0;

        for (int i = 0; i < packages.size(); i++) {
            range = Math.abs(getZipDest() - getPackages().get(i).getDestination().getZipCode());
            if (range > maxRange) {
                maxRange = range;
            }
            priceOfPackage = packages.get(i).getPrice();
            profit += priceOfPackage;
        }

        profit -= (maxRange * GAS_RATE);

        return profit;
    }


    /**
     * Generates a String of the truck report. Truck report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     *
     * @return Truck Report
     */
    @Override
    public String report() {
        String endResult = "";

        /////truck report

        String truck = "==========Truck Report==========";
        String license = "License Plate No.: " + this.licensePlate;
        String destination = "Destination: " + this.zipDest;
        String weightLoad = String.format("Weight load: %.2f" + "/%.2f", this.currentWeight, this.maxWeight);
        String netProfit = ("Net Profit: " + nf.format(this.getProfit()));
        String shippingLabels = "=====Shipping Labels=====";
        String dash = "====================";


        ///////shipping labels

        for (int i = 0; i < packages.size(); i++) {
            endResult += "\n" + packages.get(i).shippingLabel();
        }

        return truck + "\n" + license + "\n" + destination + "\n" + weightLoad + "\n" + netProfit
                + "\n" + shippingLabels + endResult;
    }

}